LRU

AIM:

To write a c program to implement LRU page replacement algorithm.

Algorithm:

1: Start the process
2: Declare the size
3: Get the number of pages to be inserted
4: Get the value
5: Declare counter and stack
6: Select the least recently used page by counter value
7: Stack them according the selection.
8: Display the values
9: Stop the process

Program Code:

#include<stdio.h>
#include<conio.h>
int main()
{
	int i, j , k, min, rs[25], m[10], count[10], flag[25], n, f, pf=0, next=1;
	printf("Enter the length of reference string :");
	scanf("%d",&n);
	printf("Enter the reference string :");
	for(i=0;i<n;i++)
	{
		scanf("%d",&rs[i]);
		flag[i]=0;
	}
	printf("Enter the number of frames :");
	scanf("%d",&f);
	for(i=0;i<f;i++)
	{
		count[i]=0;
		m[i]=-1;
	}
	printf("\nReference String \tFrame 1 \t\tFrame 2 \t\tFrame 3\n");
	for(i=0;i<n;i++)
	{
		for(j=0;j<f;j++)
		{
			if(m[j]==rs[i])
			{
				flag[i]=1;
				count[j]=next;
				next++;
			}
		}
		if(flag[i]==0)
		{
			if(i<f)
			{  
				m[i]=rs[i];
				count[i]=next;
				next++;
			}
			else
			{ 
				min=0;
				for(j=1;j<f;j++)
				if(count[min] > count[j])
					min=j;
				m[min]=rs[i];
				count[min]=next;
				next++;
			}
			pf++;
		}
		printf("%d\t\t\t",rs[i]);
		for(j=0;j<f;j++)
		{
			if(m[j]!=-1)
				printf("%d\t\t\t", m[j]);
			else
				printf("-\t\t\t");
		}
		printf("\n");
	}
	printf("\nNumber of PageFaults -- %d",pf);
}
